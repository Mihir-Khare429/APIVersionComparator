# Flow of the pipeline
# 1. Initialise the required credentials
# 2. Build stage will build the docker image
# 3. Run Terraform plan
# 4. Run Terraform apply.

.ssh: &ssh-common
  before_script:
    - mkdir -p ~/.ssh
    - eval `ssh-agent -s`
    - echo $SSH_KNOWN_HOSTS > ~/.ssh/known_hosts
    - ssh-add - <<< "$SSH_PRIVATE_KEY"

.npm_setup: &npm_setup
  before_script:
    - npm config set registry https://registry.npmjs.org/
    - npm config set //artifactory.cimpress.io/artifactory/api/npm/npm-release-local/:_authToken=$CT_ARTIFACTORY_TOKEN
    - npm config set //artifactory.cimpress.io/artifactory/api/npm/npm-release-local/:always-auth=true
    - npm config set @cimpress-technology:registry https://artifactory.cimpress.io/artifactory/api/npm/npm-release-local/
    - chmod 644 ~/.npmrc

.tags: &tags-common
  tags:
    - docker
    - linux

stages:
  - init
  - build
  - plan
  - deploy

intialise: 
   image: xueshanf/awscli
   stage: init
   script:
     - export SECRETS_STRING="$(aws secretsmanager get-secret-value --secret-id $AMAROK_ARTIFACTORY_TOKEN_SECRET_ARN --query SecretString --output text --region eu-west-1)"
     - echo "CT_ARTIFACTORY_TOKEN=$(jq -r '.token' <<<"$SECRETS_STRING")" >> build.env
   artifacts:
     expire_in: 1 week
     reports:
       dotenv: build.env
   tags:
    - docker
    - linux

build-stg :
  <<: *ssh-common
  <<: *npm_setup
  <<: *tags-common
  image: node:14
  stage : build
  artifacts :
    untracked: true 
    paths :
      - dist/ 
    expire_in : 1 week
  script : 
    - npm -v
    - echo "checking NODE_ENV value"
    - echo $NODE_ENV
    - npm ci
    - npm run build:stag
  variables :
    NODE_ENV : "stg"


plan-stg :
  <<: *ssh-common
  <<: *tags-common
  image: registry.gitlab.com/cimpress-technology/ff/infrastructure.ci.cd/modules/ecs-service:1.3.0
  stage : plan
  artifacts :
    untracked: true 
    expire_in : 1 week
  dependencies:
    - "build-stg"
  script : 
    - terraform -v
    - cd scripts
    - terraform init
    - terraform validate
    - terraform plan

deploy-stg :
  <<: *ssh-common
  <<: *tags-common
  image: registry.gitlab.com/cimpress-technology/ff/infrastructure.ci.cd/modules/ecs-service:1.3.0
  stage : deploy
  when: manual
  only : 
    - master
  dependencies:
    - "plan-stg"
  script : 
    - ./scripts/build-image.sh
    - cd scripts
    - export const TF_VAR_container_version=$CI_COMMIT_SHORT_SHA
    - terraform init
    - terraform apply --auto-approve


